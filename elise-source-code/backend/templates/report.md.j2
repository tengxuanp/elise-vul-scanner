{# backend/templates/report.md.j2 #}
{# 
  Markdown report template (Jinja2)

  Expected context keys:
    - job_id: str
    - target: str | None
    - generated_at: str (ISO8601) | None
    - started_at: str (ISO8601) | None
    - summary: {
        total: int,
        by_severity: {high:int, medium:int, low:int},
        by_family: {family:int, ...}
      } | None
    - categories: {
        summary_counts: {group:int, ...},
        ...
      } | None
    - top_findings: [ { ... } ]  # preferred
      OR
    - findings:     [ { ... } ]  # fallback

  Each finding item ideally provides:
    method, url, param, family, confidence, status, response_snippet, latency_ms, severity, signals, response_meta
#}

{%- macro severity_of(item) -%}
  {%- set sig = item.signals or {} -%}
  {%- set redir = sig.open_redirect or {} -%}
  {%- set login = sig.login or {} -%}
  {%- set refl  = sig.reflection or {} -%}
  {%- set sqlerr = sig.sql_error -%}
  {%- if item.severity -%}
    {{ item.severity }}
  {%- elif (redir.open_redirect if redir is mapping else false)
         or (login.login_success if login is mapping else false)
         or (refl.js_context if refl is mapping else false)
         or sqlerr -%}
    high
  {%- elif (item.confidence or 0) >= 0.9 -%}
    high
  {%- elif (item.confidence or 0) >= 0.6 -%}
    medium
  {%- else -%}
    low
  {%- endif -%}
{%- endmacro %}

{%- macro short(s, n=120) -%}
  {%- if not s -%}{%- else -%}
    {%- set flat = (s|string).replace('\n',' ').replace('\r',' ') -%}
    {%- if flat|length <= n -%}{{ flat }}
    {%- else -%}{{ flat[:n-1] }}…{%- endif -%}
  {%- endif -%}
{%- endmacro %}

{%- macro latency_ms(item) -%}
  {%- if item.latency_ms is defined and item.latency_ms -%}
    {{ item.latency_ms }}
  {%- elif item.response_meta and item.response_meta.elapsed_ms -%}
    {{ item.response_meta.elapsed_ms }}
  {%- else -%}
  {%- endif -%}
{%- endmacro %}

# Scan Report — Job `{{ job_id }}`
- Target: **{{ target or 'unknown' }}**
- Generated: **{{ generated_at or '' }}**
{%- if started_at %}
- Crawl started at: **{{ started_at }}**
{%- endif %}

## Summary
- Total findings considered: **{{ (summary.total if summary and summary.total is not none) else (top_findings|length if top_findings is defined else (findings|length if findings is defined else 0)) }}**
{%- if summary and summary.by_severity %}
- By severity: **high={{ summary.by_severity.high or 0 }}**, **medium={{ summary.by_severity.medium or 0 }}**, **low={{ summary.by_severity.low or 0 }}**
{%- endif %}
{%- if summary and summary.by_family %}
- By family:
{%- for k,v in summary.by_family|dictsort %}
  `{{ k }}`={{ v }}{{ "," if not loop.last else "" }}
{%- endfor %}
{%- endif %}

{%- if categories and categories.summary_counts %}
## Endpoint Categories (from crawl)
| Group | Count |
|:------|------:|
{%- for k,v in categories.summary_counts|dictsort %}
| {{ k }} | {{ v }} |
{%- endfor %}

{%- endif %}

## Top Findings
{%- set rows = top_findings if top_findings is defined else findings %}
{%- if rows and rows|length > 0 %}
| # | Severity | Conf | Family | Method | URL | Param | Status | Latency(ms) | Snippet |
|---:|:--------|-----:|:-------|:------:|:-----|:------:|------:|-----------:|:--------|
{%- for f in rows %}
| {{ loop.index }} | {{ severity_of(f) }} | {{ "%.2f"|format(f.confidence or 0) }} | {{ (f.family or 'unknown')|lower }} | {{ f.method or 'GET' }} | {{ f.url or '' }} | {{ f.param or '' }} | {{ f.status or '' }} | {{ latency_ms(f) or '' }} | {{ short(f.response_snippet, 120) }} |
{%- endfor %}

> Note: Severity is derived from engine signals (open redirect/login oracle/JS reflection/SQL errors) and confidence score heuristics.
{%- else %}
_No findings._
{%- endif %}

{%- if rows and rows|length > 0 %}
## Appendix: Raw Findings (JSON)
<details>
<summary>Expand</summary>

```json
{# `tojson` may not be present in all environments; pass pre-serialized if needed as `rows_json` #}
{{ rows_json if rows_json is defined else rows | tojson(indent=2) }}
